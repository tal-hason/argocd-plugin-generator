apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: delete-app-from-branch
spec:
  params:
    - default: '1234'
      name: service-name
      type: string
    - default: 'gh-token'
      name: git-secret-name
      type: string
    - default: 'xxx'
      name: branch_name
      type: string
    - default: 'xxx'
      name: tag
      type: string
    - default: 'xxx'
      name: repository_name
      type: string
    - default: 'xxx'
      name: project_name
      type: string
    - default: 'xxx'
      name: gitops-branch
      type: string
    - default: 'xxx'
      name: pr-state
      type: string

  steps:
    - args:
        - '-c'
        - >
          set -ex

          pwd

          ls -l

          cd GitOps

          ls -l

          cd Argo-Plugin

          ls -l

          cd ApplicationFiles

          ls -l

          cp ${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.git-credentials ~/.git-credentials

          cp ${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.gitconfig ~/.gitconfig

          git config --global --add safe.directory $(workspaces.output.path)

          git switch $(params.gitops-branch)

          git pull

          # Run commands for closed pull request

          echo "PR is closed. Running script for closed PR."

          export BRANCH=$(params.branch_name)

          export BRANCH=$(echo ${BRANCH} | awk '{print tolower($0)}')

          export REPO=$(params.repository_name)

          export REPO=$(echo ${REPO} | awk '{print tolower($0)}')

          export PROJECT=$(params.project_name)

          export PROJECT=$(echo ${PROJECT} | awk '{print tolower($0)}')

          pwd

          cd $(workspaces.output.path)/GitOps/Argo-Plugin/ApplicationFiles

          ls -l

          rm $REPO-$BRANCH.yaml

          echo "Delete PR Branch from the Plugin Repo"

          git add -A

          git commit -m "Removeing branch $BRANCH PR for Deployment"

          git push

      command:
        - /bin/bash
      env:
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: $(params.git-secret-name)
        - name: GIT_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: $(params.git-secret-name)
        - name: WORKSPACE_BASIC_AUTH_DIRECTORY_PATH
          value: $(workspaces.git-config.path)
      image: 'quay.io/argocicd/update-deploy:pipeline'
      name: update-chart-app-ver
      workingDir: /workspace/output/
      resources: {}
  workspaces:
    - description: The git repo will be cloned onto the volume backing this Workspace.
      name: output
    - description: The git repo config files
      name: git-config
