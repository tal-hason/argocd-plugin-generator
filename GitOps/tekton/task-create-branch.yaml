apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-app-from-branch
spec:
  params:
    - default: '1234'
      name: service-name
      type: string
    - default: 'gh-token'
      name: git-secret-name
      type: string
    - default: 'xxx'
      name: branch_name
      type: string
    - default: 'xxx'
      name: tag
      type: string
    - default: 'xxx'
      name: repository_name
      type: string
    - default: 'xxx'
      name: project_name
      type: string

  steps:
    - args:
        - '-c'
        - >
          set -ex

          pwd

          ls -l

          export BRANCH=$(params.branch_name)

          export BRACNH=$(echo ${BRANCH} | awk '{print tolower($0)})

          export REPO=$(params.repository_name)

          export REPO=$(echo ${REPO} | awk '{print tolower($0)})

          export PROJECT=$(params.project_name)

          export PROJECT=$(echo ${PROJECT} | awk '{print tolower($0)})          

          echo "GenerateApplication:" >  GitOps/Argo-Plugin/ApplcaitionFiles/${REPO}-${BRACNH}.yaml

          echo "  branch: ${BRANCH}" >>  GitOps/Argo-Plugin/ApplcaitionFiles/${REPO}-${BRACNH}.yaml

          echo "  tag: $(params.tag)" >> GitOps/Argo-Plugin/ApplcaitionFiles/${REPO}-${BRACNH}.yaml

          echo "  repoName: ${REPO}" >> GitOps/Argo-Plugin/ApplcaitionFiles/${REPO}-${BRACNH}.yaml

          echo "  projectName: ${PROJECT}" >> GitOps/Argo-Plugin/ApplcaitionFiles/${REPO}-${BRACNH}.yaml

          cat GitOps/Argo-Plugin/ApplcaitionFiles/$BRACNH.yaml

      command:
        - /bin/bash
      env:
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: $(params.git-secret-name)
        - name: GIT_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: $(params.git-secret-name)
      image: 'quay.io/argocicd/update-deploy:pipeline'
      name: update-chart-app-ver
      workingDir: /workspace/output/
      resources: {}
  workspaces:
    - description: The git repo will be cloned onto the volume backing this Workspace.
      name: output
